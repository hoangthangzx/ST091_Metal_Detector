// Generated by view binder compiler. Do not edit!
package com.metalsensor.gold.detector.finder.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.metalsensor.gold.detector.finder.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemCoinBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ConstraintLayout ct;

  @NonNull
  public final FrameLayout fr;

  @NonNull
  public final ImageView imageView4;

  @NonNull
  public final ImageView imvcoin;

  @NonNull
  public final TextView tvname;

  private ItemCoinBinding(@NonNull ConstraintLayout rootView, @NonNull ConstraintLayout ct,
      @NonNull FrameLayout fr, @NonNull ImageView imageView4, @NonNull ImageView imvcoin,
      @NonNull TextView tvname) {
    this.rootView = rootView;
    this.ct = ct;
    this.fr = fr;
    this.imageView4 = imageView4;
    this.imvcoin = imvcoin;
    this.tvname = tvname;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemCoinBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemCoinBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_coin, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemCoinBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ct;
      ConstraintLayout ct = ViewBindings.findChildViewById(rootView, id);
      if (ct == null) {
        break missingId;
      }

      id = R.id.fr;
      FrameLayout fr = ViewBindings.findChildViewById(rootView, id);
      if (fr == null) {
        break missingId;
      }

      id = R.id.imageView4;
      ImageView imageView4 = ViewBindings.findChildViewById(rootView, id);
      if (imageView4 == null) {
        break missingId;
      }

      id = R.id.imvcoin;
      ImageView imvcoin = ViewBindings.findChildViewById(rootView, id);
      if (imvcoin == null) {
        break missingId;
      }

      id = R.id.tvname;
      TextView tvname = ViewBindings.findChildViewById(rootView, id);
      if (tvname == null) {
        break missingId;
      }

      return new ItemCoinBinding((ConstraintLayout) rootView, ct, fr, imageView4, imvcoin, tvname);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
